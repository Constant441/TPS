def ColorFromBuildResult(result){
    if("${result}" == 'SUCCESS') return '#18A558'
    if("${result}" == 'ABORTED') return '#6e6e6e'
    if("${result}" == 'UNSTABLE') return '#fcba03'
    return '#FF0000'
}

pipeline {
    agent {
        node {
            label ""
            customWorkspace "$BUILD_DIR"
        }
    }


    /*environment {
        GIT_URL_GAME = 'https://github.com/Constant441/TPS.git'
        GIT_CREDENTIALS_GAME = 'Constant441-github'
        GIT_BRANCH_GAME = 'master'
        UAT_PATH = 'D:\\Programs\\Unreal Engine\\UE_5.5\\Engine\\Build\\BatchFiles\\RunUAT.bat'
        PROJECT_PATH = "$BUILD_DIR\\TPS.uproject"
        // ARCHIVE_PATH = "D:\\JenkinsJobs\\Artifacts\\$JOB_NAME\\$BUILD_NUMBER"
        ARCHIVE_PATH = "$BUILD_DIR\\Build"
        BUILD_FLAGS = '-build -cook -package -stage -archive -pak -allmaps'
        ZIP_DIR = 'Build\\**\\*.*'
        SLACK_CHANNEL = 'tps-game-builds'
        PLATFORM = 'Win64' // ['Android', 'Linux'..]
        CONFIG = 'Development' // ['Shipping', 'DebugGame'..]
    }*/


    stages {

        stage('Notification') {
            steps {
                slackSend channel: "$SLACK_CHANNEL",
                          color: "$currentBuild.previousBuild" == 'null' ? '#18A558' : ColorFromBuildResult("$currentBuild.previousBuild.result"),
                          message: "Build started: ${env.JOB_NAME} №${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)"
            }
        }

        stage('Git clone') {
            steps {
                checkout scmGit(branches: [[name: "$GIT_BRANCH_GAME"]],
                                extensions: [cleanBeforeCheckout()],
                                userRemoteConfigs: [[credentialsId: "$GIT_CREDENTIALS_GAME", 
                                url: "$GIT_URL_GAME"]])
            }
        }

        stage('Build') {
            steps {
                bat '''
                    chcp 65001
                    "%UAT_PATH%" BuildCookRun ^
                    -project="%PROJECT_PATH%" ^
                    -platform="%PLATFORM%" ^
                    -clientconfig="%CONFIG%" ^
                    -archivedirectory="%ARCHIVE_PATH%" ^
                    %BUILD_FLAGS% -noturnkeyvariables
                '''
            }
        }

        stage('Archive artifacts') {
            steps {
                archiveArtifacts artifacts: "$ZIP_DIR"
            }
        }
    }


    post{
        always {
            slackSend channel: "$SLACK_CHANNEL",
                        color: ColorFromBuildResult("$currentBuild.currentResult"),
                        message: "Build $currentBuild.currentResult: ${env.JOB_NAME} №${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)"
        }
    }
}